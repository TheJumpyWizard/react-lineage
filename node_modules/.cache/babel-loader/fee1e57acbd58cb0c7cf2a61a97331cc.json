{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { Parser, Select } from 'node-sql-parser';\nexport function parseSqlQuery(query) {\n  var parser = new Parser();\n  var ast = parser.astify(query);\n  if (!ast || !('from' in ast) || !ast.from?.length) {\n    throw new Error('Invalid SQL query: no FROM clause');\n  }\n  var table = ast.from[0].table;\n  var columns = [];\n  if (ast instanceof Select && 'selectList' in ast) {\n    var _iterator = _createForOfIteratorHelper(ast.selectList),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var selectItem = _step.value;\n        var column = selectItem.expr.column;\n        columns.push({\n          table: table,\n          column: column\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return {\n    table: table,\n    columns: columns\n  };\n}","map":{"version":3,"names":["Parser","Select","parseSqlQuery","query","parser","ast","astify","from","length","Error","table","columns","_iterator","_createForOfIteratorHelper","selectList","_step","s","n","done","selectItem","value","column","expr","push","err","e","f"],"sources":["/Users/bk/data_work/react-lineage/src/services/sqlParser.ts"],"sourcesContent":["import { Parser, Select } from 'node-sql-parser';\nimport { Column, ParsedQuery } from '../interfaces/interfaces';\n\nexport function parseSqlQuery(query: string): ParsedQuery {\n  const parser = new Parser();\n  const ast = parser.astify(query) as unknown as Select;\n\n  if (!ast || !('from' in ast) || !ast.from?.length) {\n    throw new Error('Invalid SQL query: no FROM clause');\n  }\n\n  const table = ast.from[0].table;\n  const columns: Column[] = [];\n\n  if (ast instanceof Select && 'selectList' in ast) {\n    for (const selectItem of ast.selectList) {\n      const column = selectItem.expr.column;\n      columns.push({\n        table,\n        column,\n      });\n    }\n  }\n\n\n  return {\n    table,\n    columns,\n  };\n}\n\n"],"mappings":";;;AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,iBAAiB;AAGhD,OAAO,SAASC,aAAaA,CAACC,KAAa,EAAe;EACxD,IAAMC,MAAM,GAAG,IAAIJ,MAAM,EAAE;EAC3B,IAAMK,GAAG,GAAGD,MAAM,CAACE,MAAM,CAACH,KAAK,CAAsB;EAErD,IAAI,CAACE,GAAG,IAAI,EAAE,MAAM,IAAIA,GAAG,CAAC,IAAI,CAACA,GAAG,CAACE,IAAI,EAAEC,MAAM,EAAE;IACjD,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;EACtD;EAEA,IAAMC,KAAK,GAAGL,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK;EAC/B,IAAMC,OAAiB,GAAG,EAAE;EAE5B,IAAIN,GAAG,YAAYJ,MAAM,IAAI,YAAY,IAAII,GAAG,EAAE;IAAA,IAAAO,SAAA,GAAAC,0BAAA,CACvBR,GAAG,CAACS,UAAU;MAAAC,KAAA;IAAA;MAAvC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAyC;QAAA,IAA9BC,UAAU,GAAAJ,KAAA,CAAAK,KAAA;QACnB,IAAMC,MAAM,GAAGF,UAAU,CAACG,IAAI,CAACD,MAAM;QACrCV,OAAO,CAACY,IAAI,CAAC;UACXb,KAAK,EAALA,KAAK;UACLW,MAAM,EAANA;QACF,CAAC,CAAC;MACJ;IAAC,SAAAG,GAAA;MAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA;IAAA;MAAAZ,SAAA,CAAAc,CAAA;IAAA;EACH;EAGA,OAAO;IACLhB,KAAK,EAALA,KAAK;IACLC,OAAO,EAAPA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}